{"version":3,"file":"static/js/41.81875e50.chunk.js","mappings":"kMAOMA,EAAiB,CACnBC,OAAQ,CACJC,MAAO,CACHC,MAAO,GACPC,SAAS,GAEbC,YAAa,CACTF,MAAO,GACPC,SAAS,GAEbE,QAAS,CACLH,MAAO,GACPC,SAAS,GAEbG,MAAO,CACHJ,MAAO,KACPC,SAAS,IAGjBA,SAAS,GAuCb,UApCA,WACI,IAAAI,GAAgCC,EAAAA,EAAAA,YAAWC,EAAAA,GAAnCC,EAAYH,EAAZG,aAAcC,EAAKJ,EAALI,MAChBC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAsDC,EAAAA,EAAAA,KAA9CC,EAASF,EAATE,UAAWC,EAAKH,EAALG,MAAOC,EAAWJ,EAAXI,YAEA,SAAAC,IAkBzB,OAlByBA,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA1B,SAAAC,EAA2BC,GAAI,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAM2B,OAN3BF,EAAAC,KAAA,GAEjBH,EAAW,IAAIK,UACZC,OAAO,QAASP,EAAKxB,OAAOC,MAAMC,OAC3CuB,EAASM,OAAO,cAAeP,EAAKxB,OAAOI,YAAYF,OACvDuB,EAASM,OAAO,UAAWP,EAAKxB,OAAOK,QAAQH,OAC/CuB,EAASM,OAAO,QAASP,EAAKxB,OAAOM,MAAMJ,OAAOyB,EAAAE,KAAA,EAE5CX,EAAY,GAADc,OACVC,4CAAiC,YACpC,OACAR,EACA,CACIS,cAAc,UAADF,OAAYrB,KAEhC,OACDC,EAAS,IAADoB,OAAKtB,EAAayB,GAAE,WAAW,CAAEC,SAAS,IAAQT,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,kCAAAA,EAAAW,OAAA,GAAAf,EAAA,oBAEjEgB,MAAA,KAAAC,UAAA,CAED,OAtBiD1B,EAAV2B,YAuBnCC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACNC,YAxB6D,SAE3CC,GAAA,OAAA1B,EAAAoB,MAAC,KAADC,UAAA,EAuBlBM,MAAO/C,EACPkB,MAAOA,EACPD,UAAWA,GAGvB,C,oJCyBA,MA/EA,SAAkB+B,GAAwD,IAArDD,EAAKC,EAALD,MAAOF,EAAWG,EAAXH,YAAaI,EAAUD,EAAVC,WAAY/B,EAAK8B,EAAL9B,MAAOD,EAAS+B,EAAT/B,UAC1DiC,GAAkCC,EAAAA,EAAAA,GAAQJ,GAAMK,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAYF,EAAA,GAAEG,EAASH,EAAA,GAwB9B,OACEI,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAaC,SAN/B,SAA0BC,GACxBA,EAAEC,iBACFf,EAAYU,EACd,EAG0DM,SAAA,EACtDlB,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJ1B,GAAG,QACH2B,KAAK,OACLC,MAAM,QACNC,QAAQ,QACRC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,6BACVC,QAASf,EACTgB,UAAgB,OAALvB,QAAK,IAALA,OAAK,EAALA,EAAO9C,OAAOC,MAAMC,SAEjCwC,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJ1B,GAAG,cACH4B,MAAM,cACND,KAAK,OACLG,WAAY,EAACK,EAAAA,EAAAA,IAAoB,IACjCH,UAAU,6DACVC,QAASf,EACTgB,UAAgB,OAALvB,QAAK,IAALA,OAAK,EAALA,EAAO9C,OAAOI,YAAYF,SAErC8C,IAAcO,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAX,SAAA,EACdlB,EAAAA,EAAAA,KAACmB,EAAAA,EAAK,CACJ1B,GAAG,UACH4B,MAAM,UACND,KAAK,OACLE,QAAQ,QACRC,WAAY,EAACC,EAAAA,EAAAA,OACbC,UAAU,8BACVC,QAASf,EACTgB,UAAgB,OAALvB,QAAK,IAALA,OAAK,EAALA,EAAO9C,OAAOK,QAAQH,SAEnCwC,EAAAA,EAAAA,KAAC8B,EAAAA,EAAW,CACVrC,GAAG,QACHsC,QAAM,EACNN,WAAS,EACTC,QAASf,QAIbX,EAAAA,EAAAA,KAAA,OAAKgC,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,WAAY,UAAWjB,UAC7ElB,EAAAA,EAAAA,KAACoC,EAAAA,EAAM,CAAChB,KAAK,SAASiB,UAAWzB,EAAUnD,SAAW2C,GA/D5D,WACE,IAAIkC,GAAS,EACb,IAAK,IAAMC,KAAO3B,EAAUtD,OACtBsD,EAAUtD,OAAOiF,GAAK/E,QAAU4C,EAAM9C,OAAOiF,GAAK/E,QAAO8E,GAAS,GAExE,OAAOA,CACT,CAyDqEE,KAA8B5B,EAAUnD,QAAQyD,SAC5G5C,GACC0B,EAAAA,EAAAA,KAAA,OAAKc,UAAU,SAAQI,UACrBlB,EAAAA,EAAAA,KAACyC,EAAAA,EAAc,MAEjBnC,EAAa,SAAW,gBAG7B/B,IAASyB,EAAAA,EAAAA,KAAA,QAAMgC,MAAO,CAAEU,MAAO,OAAQxB,SAAE3C,MAGhD,C","sources":["places/pages/NewPlace.jsx","places/pages/PlaceForm.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport PlaceForm from './PlaceForm';\r\n// import useHttpClient from '../../shared/api/useHttpClient';\r\nimport { useHttpClient } from '../../shared/api/http-hook';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nconst emptyPlaceForm = {\r\n    inputs: {\r\n        title: {\r\n            value: '',\r\n            isValid: false,\r\n        },\r\n        description: {\r\n            value: '',\r\n            isValid: false,\r\n        },\r\n        address: {\r\n            value: '',\r\n            isValid: false,\r\n        },\r\n        image: {\r\n            value: null,\r\n            isValid: false\r\n        }\r\n    },\r\n    isValid: false\r\n}\r\n\r\nfunction NewPlace() {\r\n    const { loggedInUser, token } = useContext(AuthContext)\r\n    const navigate = useNavigate();\r\n\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n    async function placeSubmit(form) {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('title', form.inputs.title.value,)\r\n            formData.append('description', form.inputs.description.value,)\r\n            formData.append('address', form.inputs.address.value,)\r\n            formData.append('image', form.inputs.image.value,)\r\n\r\n            await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/places/`,\r\n                'POST',\r\n                formData,\r\n                {\r\n                    Authorization: `Bearer ${token}`\r\n                },\r\n            )\r\n            navigate(`/${loggedInUser.id}/places`, { replace: true });\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <PlaceForm\r\n            placeSubmit={placeSubmit}\r\n            place={emptyPlaceForm}\r\n            error={error}\r\n            isLoading={isLoading}\r\n        />\r\n    )\r\n}\r\n\r\nexport default NewPlace","import React, { useState, useEffect } from 'react';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/utils/validators'\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport useForm from '../../shared/hooks/FormHook';\r\nimport LoadingSpinner from '../../shared/components/UIElemets/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport './PlaceForm.css'\r\n\r\nfunction PlaceForm({ place, placeSubmit, updateMode, error, isLoading }) {\r\n  const [inputHandler, formState] = useForm(place)\r\n\r\n  function isPlaceEqualToStateForm() {\r\n    let result = true;\r\n    for (const key in formState.inputs) {\r\n      if (formState.inputs[key].value !== place.inputs[key].value) result = false\r\n    }\r\n    return result\r\n  }\r\n\r\n  // const inputHandler = useCallback((id, value, isValid) => {\r\n  //   dispatch({\r\n  //     type: 'INPUT_CHANGE',\r\n  //     value: value,\r\n  //     isValid: isValid,\r\n  //     inputId: id\r\n  //   })\r\n  // }, [dispatch])\r\n\r\n  function placeSubmitLocal(e) {\r\n    e.preventDefault()\r\n    placeSubmit(formState);\r\n  }\r\n\r\n  return (\r\n    <form className='place-form' onSubmit={placeSubmitLocal}>\r\n      <Input\r\n        id='title'\r\n        type='text'\r\n        label='Title'\r\n        element='input'\r\n        validators={[VALIDATOR_REQUIRE()]}\r\n        errorText='Please enter a valid title'\r\n        onInput={inputHandler}\r\n        initValue={place?.inputs.title.value}\r\n      />\r\n      <Input\r\n        id='description'\r\n        label='Description'\r\n        type='text'\r\n        validators={[VALIDATOR_MINLENGTH(5)]}\r\n        errorText='Please enter a valid descripition. (5 characters at least)'\r\n        onInput={inputHandler}\r\n        initValue={place?.inputs.description.value}\r\n      />\r\n      {!updateMode && <>\r\n        <Input\r\n          id='address'\r\n          label='Address'\r\n          type='text'\r\n          element='input'\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText='Please enter a valid adress'\r\n          onInput={inputHandler}\r\n          initValue={place?.inputs.address.value}\r\n        />\r\n        <ImageUpload \r\n          id='image'\r\n          center\r\n          errorText\r\n          onInput={inputHandler}\r\n        />\r\n      </>\r\n      }\r\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n        <Button type='submit' disabled={(formState.isValid && place && isPlaceEqualToStateForm()) | !formState.isValid}>\r\n          {isLoading ?\r\n            <div className='center'>\r\n              <LoadingSpinner />\r\n            </div> :\r\n            updateMode ? 'Update' : 'Add Place'}\r\n        </Button>\r\n      </div>\r\n      {error && <span style={{ color: 'red' }}>{error}</span>}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PlaceForm"],"names":["emptyPlaceForm","inputs","title","value","isValid","description","address","image","_useContext","useContext","AuthContext","loggedInUser","token","navigate","useNavigate","_useHttpClient","useHttpClient","isLoading","error","sendRequest","_placeSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","form","formData","wrap","_context","prev","next","FormData","append","concat","process","Authorization","id","replace","t0","stop","apply","arguments","clearError","_jsx","PlaceForm","placeSubmit","_x","place","_ref","updateMode","_useForm","useForm","_useForm2","_slicedToArray","inputHandler","formState","_jsxs","className","onSubmit","e","preventDefault","children","Input","type","label","element","validators","VALIDATOR_REQUIRE","errorText","onInput","initValue","VALIDATOR_MINLENGTH","_Fragment","ImageUpload","center","style","display","flexDirection","alignItems","Button","disabled","result","key","isPlaceEqualToStateForm","LoadingSpinner","color"],"sourceRoot":""}