{"version":3,"file":"static/js/733.2b638b82.chunk.js","mappings":"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","sources":["shared/components/UIElemets/Card.jsx","user/pages/AuthForm.jsx","user/pages/Signin.jsx"],"sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport useForm from '../../shared/hooks/FormHook';\r\nimport Card from '../../shared/components/UIElemets/Card';\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/utils/validators'\r\nimport LoadingSpinner from '../../shared/components/UIElemets/LoadingSpinner'\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport './AuthForm.css'\r\n\r\nfunction AuthForm({ form, handleSubmit, header, isLoading, error, signUpMode }) {\r\n  const [inputHandler, formState] = useForm(form)\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [passwordType, setPasswordType] = useState('password')\r\n\r\n  useEffect(() => {\r\n    setPasswordType(showPassword ? 'text' : 'password')\r\n  }, [showPassword]);\r\n\r\n  function handleSubmit1(e) {\r\n    e.preventDefault()\r\n    handleSubmit(formState)\r\n  }\r\n\r\n  // function handleImageUplaod(id, pickedFile, fileIsValid) {\r\n  //   console.log(id, pickedFile, fileIsValid);\r\n  // }\r\n\r\n  return (\r\n    <Card className='authentication'>\r\n      <h2 className='authentication__header'>{header}</h2>\r\n      <hr />\r\n      <form onSubmit={handleSubmit1}>\r\n        {/* // Checking if signup mode or login mode */}\r\n        {signUpMode && <>\r\n          <Input\r\n            element='input'\r\n            label='Name'\r\n            id='name'\r\n            type='text'\r\n            placeholder='Enter Name'\r\n            errorText='Invalid Name! Enter at least 5 charecters '\r\n            validators={[VALIDATOR_MINLENGTH(3)]}\r\n            onInput={inputHandler}\r\n          />\r\n          <ImageUpload\r\n            id='image'\r\n            center\r\n            errorText\r\n            onInput={inputHandler}\r\n          />\r\n        </>\r\n        }\r\n        <Input\r\n          element='input'\r\n          label='Email'\r\n          id='email'\r\n          type='email'\r\n          placeholder='Enter Email Address'\r\n          errorText='Invalid Email Address'\r\n          validators={[VALIDATOR_EMAIL()]}\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          element='input'\r\n          label='Password'\r\n          id='password'\r\n          type={passwordType}\r\n          placeholder='Enter Password'\r\n          errorText='Invalid Password! Enter at least 5 charecters'\r\n          validators={[VALIDATOR_MINLENGTH(6)]}\r\n          onInput={inputHandler}\r\n        />\r\n        <div>\r\n          <input type=\"checkbox\" id=\"showPassword\" onClick={() => setShowPassword(prev => !prev)} />\r\n          <label htmlFor=\"showPassword\">Show Password</label>\r\n        </div>\r\n        <div className=\"center\">\r\n          <Button type='submit' disabled={!formState.isValid}>\r\n            {isLoading ? <LoadingSpinner /> : 'Log In'}\r\n          </Button>\r\n        </div>\r\n        {error && <span style={{ color: 'red' }}>{error}</span>}\r\n      </form>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default AuthForm","import React, { useState, useEffect, useContext, useCallback } from 'react';\r\nimport AuthForm from './AuthForm';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useHttpClient } from '../../shared/api/http-hook';\r\n\r\nconst emptySignInForm = {\r\n    inputs: {\r\n        name: {\r\n            value: '',\r\n            isValid: false,\r\n        },\r\n        image: {\r\n            value: null,\r\n            isValid: false\r\n        },\r\n        email: {\r\n            value: '',\r\n            isValid: false,\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false,\r\n        }\r\n    },\r\n    isValid: false\r\n}\r\n\r\nfunction Signin() {\r\n    const { login } = useContext(AuthContext)\r\n    const navigate = useNavigate()\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient()\r\n\r\n\r\n    async function handleSubmit(form) {\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('email', form.inputs.email.value,)\r\n            formData.append('name', form.inputs.name.value,)\r\n            formData.append('password', form.inputs.password.value,)\r\n            formData.append('image', form.inputs.image.value,)\r\n            console.log(formData);\r\n            const res = await sendRequest(\r\n                `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n                'POST',\r\n                formData,\r\n                {}\r\n            )\r\n            console.log(res);\r\n            login(res.user, res.token)\r\n            navigate('/', { replace: true });\r\n        } catch (error) { }\r\n    }\r\n\r\n    return (\r\n        <AuthForm\r\n            form={emptySignInForm}\r\n            handleSubmit={handleSubmit}\r\n            header='Sign In'\r\n            isLoading={isLoading}\r\n            error={error}\r\n            signUpMode={true}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Signin"],"names":["props","_jsx","className","concat","style","children","_ref","form","handleSubmit","header","isLoading","error","signUpMode","_useForm","useForm","_useForm2","_slicedToArray","inputHandler","formState","_useState","useState","_useState2","showPassword","setShowPassword","_useState3","_useState4","passwordType","setPasswordType","useEffect","_jsxs","Card","onSubmit","e","preventDefault","_Fragment","Input","element","label","id","type","placeholder","errorText","validators","VALIDATOR_MINLENGTH","onInput","ImageUpload","center","VALIDATOR_EMAIL","onClick","prev","htmlFor","Button","disabled","isValid","LoadingSpinner","color","emptySignInForm","inputs","name","value","image","email","password","login","useContext","AuthContext","navigate","useNavigate","_useHttpClient","useHttpClient","sendRequest","_handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","res","wrap","_context","next","FormData","append","console","log","process","sent","user","token","replace","t0","stop","apply","arguments","clearError","AuthForm","_x"],"sourceRoot":""}